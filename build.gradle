plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id 'war'
}

group 'com.raghv'

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}


dependencies {
    //starter web & socket
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:bootstrap:3.3.7'
    implementation 'org.webjars:jquery:3.1.1-1'
    //End web and Socket

    //starter security
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.ldap:spring-ldap-core"
    implementation "org.springframework.security:spring-security-ldap"
    implementation "com.unboundid:unboundid-ldapsdk"
    // end security
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

//npm task to install node depndencies
task installNodeDep(type:Exec){
    //npm install
    commandLine 'npm','install'
}


//webpack task
task webpack(type: Exec) {
    inputs.file("package-lock.json").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file("webpack.config.js").withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.cacheIf { true }
    commandLine 'npm','run','build'
}


processResources.dependsOn(installNodeDep)
processResources.dependsOn(webpack)


